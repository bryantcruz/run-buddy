* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
/*The :root pseudo-class targets the top-most parent element (most likely the <html> element).
By placing the variable definitions under the :root selector, all elements throughout the HTML will have access to the variables.*/
:root {
  --primary-color: #fce138;
  --secondary-color: #024e76;
  --tertiary-color: #39a6b2;
}

body {
  color: var(--tertiary-color);
  font-family: Helvetica, Arial, sans-serif;
}


/* HEADER / NAV BAR STYLES START */

header {
  position: -webkit-sticky; /* Note that we put the prefixed version first in the CSS, and the standardized version second. We should always put the standardized version of a property at the end of a sequence of vendor-prefixed versions. */
  position: sticky;
  top: 0;
  padding: 20px 35px;
  background-color: var(--tertiary-color);
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  background-image: url('https://static.fullstack-bootcamp.com/module-2/flipped-hero-image.jpg');
  background-size: cover;
  background-position: center;
  background-attachment: fixed; /* We need the background images of these two elements to essentially be in the same place. By using the declaration background-attachment: fixed;, it places the image relative to the viewport instead of the element. must be applied to both header and hero. */
  background-position: 80%;
  z-index: 9999; 
  /*The z-index property specifies the stack order of an element. 
  An element with greater stack order is always in front of an element with a lower stack order.
  z-index only works on positioned elements (position: absolute, position: relative, position: fixed, or position: sticky) and flex items.*/
}

header h1 {
  font-weight: bold;
  margin: 0;
  font-size: 36px;
  color: var(--primary-color);
  text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
}

header a {
  text-decoration: none;
  color: var(--primary-color);
}

header nav {
  margin: 7px 0;
}

header nav ul {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  list-style: none;
}

header nav ul li a {
    text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
  padding: 10px 15px;
  font-weight: lighter;
  font-size: 1.55vw;
}
header nav ul li a:hover {
  background: var(--primary-color);
  color: var(--secondary-color);
  border-radius: 15px;
  text-shadow: none;
}

/* HEADER / NAVBAR STYLES END */



/* FOOTER STYLES START */
footer {
  background: var(--primary-color);
  padding: 40px 35px;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  width: 100%;
}

footer h2 {
  color: var(--secondary-color);
  font-size: 30px;
  margin: 0;
}

footer div {
  line-height: 1.5;
  text-align: right;
}

footer a {
  color: var(--secondary-color);
}
/* END FOOTER STYLES */

/* STYLE ALL SECTION TAGS */
section {
  padding: 60px;
}

/* HERO STYLES START */
.hero {
  background-image: url('https://static.fullstack-bootcamp.com/module-2/flipped-hero-image.jpg');
  background-size: cover;
  background-position: center;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  align-items: flex-start;
  background-attachment: fixed;
  background-position: 80%;
}

.hero-cta {
  width: 35%;
  text-align: right;
  margin: 3.5%;
  color: #fff;
  font-size: 18px;
  line-height: 1.2;
}

.hero-cta h2 {
  text-shadow: 0 0 10px rgba(0, 0, 0, 0.5); /* The first 0 means that there is no horizontal offset, so the shadow will start at the left side of the text. The second 0 indicates no vertical offset. The value 10px defines the radius, or size, of the blur. Finally, rgba(0, 0, 0, 0.5) sets the color to black at half transparency. */
  font-style: italic;
  font-size: 55px;
  color: var(--primary-color);
}

.hero-form {
  box-shadow: 0 0 10px rgba(0,0,0,0.5);
  border: 3px solid var(--secondary-color);
  background-color: rgba(252,225,56,0.8); 
  padding: 20px;
  color: var(--secondary-color);
  width: 40%;
  margin: 3.5%;
  border-radius: 15px;
}

.hero-form h3 {
  font-size: 24px;
  margin: 0;
}
.hero-form p {
  margin: 5px 0 15px 0;
}

.form-input {
  border-radius: 10px;
  border: 1px solid var(--secondary-color);
  display: block;
  padding: 7px 15px;
  font-size: 16px;
  color: var(--secondary-color);
  width: 100%;
  margin-bottom: 15px; 
  background-color: rgba(255,255,255,0.75);
}                                               /* This makes the form input's default state slightly transparent, then switches to full opaqueness when the input is in focus */
.form-input:focus {                             /* The :focus selector is used to select the element that has focus. */
    background-color: rgba(255,255,255,1);
    outline: none; /* removes border radius altogether */
}

.hero-form label {
  margin: 0 5px;
}

.hero-form button {
  border-radius: 10px;
  color: var(--primary-color);
  border: none;
  padding: 10px 20px;
  font-size: 16px;
}

.hero-form button:hover {
  background-color: var(--secondary-color);
} 
/* HERO STYLES END */


/* SECTION TITLE STYLES START */
.section-title {
  font-size: 48px;
  border-bottom: 3px solid;
  color: var(--secondary-color);
  padding-bottom: 20px;
  text-align: center;
  margin: 0 auto 35px auto;
  width: 50%;
}

.primary-border {
  border-color: var(--primary-color);
}

.secondary-border {
  border-color: var(--tertiary-color);
}
/* SECTION TITLE STYLES END */

/* WHAT WE DO STYLES */

.intro p {
  line-height: 1.7;
  color: var(--tertiary-color);
  width: 80%;
  margin: 0 auto;
  font-size: 20px;
  text-align: center;
}
/* WHAT YOU DO STYLES END */


/* WHAT YOU DO STYLES START */
.steps { 
  background: var(--primary-color);
}

.step {
  margin: 50px auto;
  padding-bottom: 50px;
  width: 80%;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
  border-bottom: 1px solid var(--tertiary-color);
}

.step:last-child { /*The.step:last-child selector means that the CSS declarations will only apply to an element with class step that's also the last element in whatever container it's in.*/
   border-bottom: none;
}
/* the (first-child) selects first child in the section*/
/* the(:nth-child) selects every even numbered child in the <section>*/


.step h3 {
  color: var(--secondary-color);
  font-size: 46px;
  flex: 1 30%;
}

.step-info {
  flex: 2 70%;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
}

.step-img {
  flex: 1 12%;
  margin-right: 20px;
}

.step-img img {
  max-width: 100%;
}

.step-text {
  flex: 12;
}

.step-text p {
  color: var(--tertiary-color);
  font-size: 18px;
}

.step-text h4 {
  font-size: 26px;
  line-height: 1.5;
  color: var(--secondary-color);
}

/* WHAT YOU DO STYLES END */

/* MEET THE TRAINERS START */
.trainers {
  width: 100%;
  margin: 0 auto;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
}

.trainer {
  margin: 20px;
  flex: 1;
  background: var(--secondary-color);
  color: var(--primary-color);
}

.trainer img {
  width: 100%;
}

.trainer-bio {
  padding: 25px;
  line-height: 1.3;
}

.trainer-bio h3 {
  font-size: 28px;
}

.trainer-bio h4 {
  font-weight: lighter;
  font-size: 22px;
  margin-bottom: 15px;
}

.trainer-bio p {
  font-size: 17px;
}
/* TRAINER STYLES END */

/* REACH OUT STYLES START */
.contact {
  background: var(--secondary-color);
}

.contact h2 {
  color: var(--primary-color);
}

.contact-info {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}

.contact-info > * {
  flex: 1;
  margin: 15px;
}

.contact-info iframe {
  height: 400px;
}

.contact-info div {
  color: white;
}

.contact-info h3 {
  color: var(--primary-color);
  font-size: 32px;
}

.contact-info p, .contact-info address {
  margin: 20px 0;
  line-height: 1.5;
  font-size: 16px;
  font-style: normal;
}

.contact-form input, .contact-form textarea {
    border-radius: 10px;
  border: 1px solid var(--secondary-color);
  display: block;
  padding: 7px 15px;
  font-size: 16px;
  color: var(--secondary-color);
  width: 100%;
  margin-bottom: 15px;
  margin-top: 5px;
  background-color: rgba(255,255,255,0.75)
}
.contact-form input:focus, .contact-form textarea:focus {
    background-color: rgba(255,255,255,1);
    outline: none;
}

.contact-form button:hover {
    border-radius: 10px;
  width: 100%;
  border: none;
  background: var(--primary-color);
  color: var(--secondary-color);
  text-align: center;
  padding: 15px 0;
  font-size: 16px;
}

.contact-info a {
  color: var(--primary-color);
}


/* REACH OUT STYLES END */

/* UTILITIES */
.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.flex-row {
  display: flex;
}

/* MEDIA QUERY FOR SMALLER DESKTOP SCREENS AND SMALLER */
@media screen and (max-width: 980px) {
  header {
      position: relative;
    padding-bottom: 0;
    justify-content: center;
  }

  header h1 {
    width: 100%;
    text-align: center;
  }

  header nav ul {
    margin-top: 20px;
    width: 100%;
    justify-content: center;
  }

  header nav ul li a {
    font-size: 20px;
  }

  footer h2, footer div {
    text-align: center;
    width: 100%;
  }

  .hero-cta, .hero-form {
    width: 100%;
  }
  
  .hero-cta {
    text-align: center;
  }

  .section-title {
    width: 80%;
  }
  
  .trainer {
    flex: 0 70%;
  }
  
  .contact-info iframe{
    flex: 1 100%;
  }
}

/* MEDIA QUERY FOR TABLETS AND SMALLER */
@media screen and (max-width: 768px) {
  section {
    padding: 30px 15px;
  }

  .step h3 {
    flex: 1 100%;
    text-align: center;
  }

  .step-info {
    flex: 2 100%;
    text-align: center;
    justify-content: center;
  }

  .step-img {
    flex: 0 32%;
    margin-right: 0;
    margin-top: 15px;
    margin-bottom: 15px;
  }

  .step-text {
    flex: 100%;  
  }
}

/* MEDIA QUERY FOR MOBILE PHONES AND SMALLER */
@media screen and (max-width: 575px) {
  .hero-form button {
    width: 100%;
  }

  .section-title {
    width: 95%;
  }

  .intro p {
    width: 100%;
  }

  .trainer {
    flex: 0 100%;
  }

  .contact-info {
    text-align: center;
  }

  .contact-info > * {
    flex: 0 100%;
  }

  .contact-form {
    order: 3;
  }
}
.checkbox-wrapper input, .radio-wrapper input {
  opacity: 0;
}
.checkbox-wrapper label, .radio-wrapper label {
  position: relative;
  left: 10px;
  margin: 10px;
  line-height: 1.6;
}
/* The ::before pseudo-element lets us inject content into an element using CSS. It places this content before everything else that currently resides in the element. */
/* Here, we left the actual content property empty but used additional CSS properties to create a white square with a blue border. then used absolute positioning to move this box on top of invisible, original input element. */
.checkbox-wrapper label::before, .radio-wrapper label::before {
  content: "";
  height: 20px;
  width: 20px;
  background: rgba(255, 255, 255, 0.75);  
  border: 1px solid var(--secondary-color);  
  position: absolute;
  top: -4px;
  left: -30px;
}
/*Setting border-radius to 50% is a quick way to turn an element into a perfectly round circle or oval.*/
.radio-wrapper label::before {
  border-radius: 50%;
}
/* this is to define how the buttons display when checked, or clicked. */
.radio-wrapper label::after {
  content: "";
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: var(--secondary-color);
  position: absolute;
  left: -29px;
  top: -3px;
  background-image: radial-gradient(circle, #39a6b2, var(--secondary-color));
}

.checkbox-wrapper label::after {
  content: "";
  height: 6px;
  width: 14px;
  border-left: 2px solid var(--secondary-color);
  border-bottom: 2px solid var(--secondary-color);
  position: absolute;
  left: -26px;
  top: 1px;
  transform: rotate(-58deg); /*we can rotate this L just enough to make it look more like a checkmark.*/
}
/* If the radio buttons or checkboxes are in their default state, they'll have no ::after pseudo content*/
.checkbox-wrapper input + label::after, .radio-wrapper input + label::after {
  content: none;
}
/*As soon as an input becomes :checked, however, the content and all of the other styles defined earlier will take effect*/
.checkbox-wrapper input:checked + label::after, .radio-wrapper input:checked + label::after {
  content: "";
}